services:
# Removido para garantir melhor experiÃªncia no teste da app.
#  postgresql:
#    container_name: psql_data
#    env_file:
#      - ../.env
#    restart: on-failure
#    build:
#      context: ..
#      dockerfile: ./infra/psql_db/Dockerfile
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_USER=${PSQL_USER}
#      - POSTGRES_PASSWORD=${PSQL_PWD}
#      - POSTGRES_DB=${PSQL_DB}
#    volumes:
#      - ../infra/psql_db/init.sql:/docker-entrypoint-initdb.d/init.sql

  snatcher:
    container_name: snatcher_backend
    env_file:
      - ../.env
    restart: always
    build:
      context: ..
      dockerfile: ./infra/snatcher/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
#      - airflow
    volumes:
      - "./:/app/src"

  redis:
    container_name: redis_server
    env_file:
      - ../.env
    restart: on-failure
    build:
      context: ..
      dockerfile: ./infra/redis/Dockerfile
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "6379:6379"
    volumes:
      - "./infra/volumes/redis/data:/data"


#  airflow:
#    container_name: snatcher_airflow
#    env_file:
#      - ../.env
#    restart: on-failure
#    depends_on:
#      - postgresql
#      - redis
#    build:
#      context: ..
#      dockerfile: ./infra/airflow/Dockerfile
#    ports:
#      - "8080:8080"
#    volumes:
#      - "./src/airflow/dags:/opt/airflow/dags"
#      - "./infra/volumes/airflow/data:/opt/airflow/logs"

volumes:
  psql_data:
    driver: local
